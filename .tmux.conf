set-option -g prefix C-r
unbind-key C-b
bind-key C-r send-prefix

unbind r
bind r source-file ~/.tmux.conf

set-option -g status-position top
set-option -g allow-rename off

set -g mouse-select-window on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g pane-border-fg black
set -g pane-active-border-fg blue

set -g status-fg white
set -g status-bg "#666666"

set-window-option -g status-left ""
set-window-option -g status-left-bg "#666666"

set-window-option -g status-right "#[fg=red,bold][[ #(git branch) branch ]] #[fg=white]#S "
set-window-option -g status-right " #S "
set-window-option -g status-right-fg white
set-window-option -g status-right-bg "#666666"

set-window-option -g window-status-format " #I: #W "

set-window-option -g window-status-current-format " #I: #W "
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg "#333333"

set -g base-index 1
set -g pane-base-index 1
set-option -g renumber-windows on

bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind C-l send-keys 'C-l'
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'
bind-key b break-pane -d

setw -g mode-keys vi
bind C-[ copy-mode
set-option escape-time 0
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "xsel -i -b"
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "xsel -i -b"
